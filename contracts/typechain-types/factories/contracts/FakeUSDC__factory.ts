/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { FakeUSDC, FakeUSDCInterface } from "../../contracts/FakeUSDC";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "blocking",
        type: "bool",
      },
    ],
    name: "blockTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "blocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noReturnData",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "noReturn",
        type: "bool",
      },
    ],
    name: "setNoReturnData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600981526020016846616b65205553444360b81b815250604051806040016040528060048152602001635553444360e01b815250816003908161005f919061011e565b50600461006c828261011e565b50506005805461ffff19169055506101dc565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a957607f821691505b6020821081036100c957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011957806000526020600020601f840160051c810160208510156100f65750805b601f840160051c820191505b818110156101165760008155600101610102565b50505b505050565b81516001600160401b038111156101375761013761007f565b61014b816101458454610095565b846100cf565b6020601f82116001811461017f57600083156101675750848201515b600019600385901b1c1916600184901b178455610116565b600084815260208120601f198516915b828110156101af578785015182556020948501946001909201910161018f565b50848210156101cd5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610899806101eb6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806340c10f191161008c578063a9059cbb11610066578063a9059cbb146101c7578063cd1b5b71146101da578063dd62ed3e14610204578063e074d6a91461023d57600080fd5b806340c10f191461018357806370a082311461019657806395d89b41146101bf57600080fd5b80631b243845116100c85780631b2438451461014257806323b872dd14610154578063303bdd2c14610167578063313ce5671461017457600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761025e565b60405161010491906106c7565b60405180910390f35b61012061011b366004610731565b6102f0565b6040519015158152602001610104565b6002545b604051908152602001610104565b60055461012090610100900460ff1681565b61012061016236600461075b565b61030a565b6005546101209060ff1681565b60405160128152602001610104565b610120610191366004610731565b610349565b6101346101a4366004610798565b6001600160a01b031660009081526020819052604090205490565b6100f761035e565b6101206101d5366004610731565b61036d565b6102026101e83660046107b3565b600580549115156101000261ff0019909216919091179055565b005b6101346102123660046107d5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61020261024b3660046107b3565b6005805460ff1916911515919091179055565b60606003805461026d90610808565b80601f016020809104026020016040519081016040528092919081815260200182805461029990610808565b80156102e65780601f106102bb576101008083540402835291602001916102e6565b820191906000526020600020905b8154815290600101906020018083116102c957829003601f168201915b5050505050905090565b6000336102fe81858561037b565b60019150505b92915050565b60055460009060ff161561032057506000610342565b61032b84848461038d565b50600554610100900460ff161561033e57005b5060015b9392505050565b600061035583836103b1565b50600192915050565b60606004805461026d90610808565b6000336102fe8185856103f0565b610388838383600161044f565b505050565b60003361039b858285610525565b6103a68585856103f0565b506001949350505050565b6001600160a01b0382166103e05760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6103ec6000838361059d565b5050565b6001600160a01b03831661041a57604051634b637e8f60e11b8152600060048201526024016103d7565b6001600160a01b0382166104445760405163ec442f0560e01b8152600060048201526024016103d7565b61038883838361059d565b6001600160a01b0384166104795760405163e602df0560e01b8152600060048201526024016103d7565b6001600160a01b0383166104a357604051634a1406b160e11b8152600060048201526024016103d7565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561051f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161051691815260200190565b60405180910390a35b50505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461051f578181101561058e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103d7565b61051f8484848403600061044f565b6001600160a01b0383166105c85780600260008282546105bd9190610842565b9091555061063a9050565b6001600160a01b0383166000908152602081905260409020548181101561061b5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103d7565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661065657600280548290039055610675565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106ba91815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156106f557602081860181015160408684010152016106d8565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461072c57600080fd5b919050565b6000806040838503121561074457600080fd5b61074d83610715565b946020939093013593505050565b60008060006060848603121561077057600080fd5b61077984610715565b925061078760208501610715565b929592945050506040919091013590565b6000602082840312156107aa57600080fd5b61034282610715565b6000602082840312156107c557600080fd5b8135801515811461034257600080fd5b600080604083850312156107e857600080fd5b6107f183610715565b91506107ff60208401610715565b90509250929050565b600181811c9082168061081c57607f821691505b60208210810361083c57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561030457634e487b7160e01b600052601160045260246000fdfea2646970667358221220875dc62d3199e79f679f910650045f40e660e13d5384263d88e2c95d4011360e64736f6c634300081b0033";

type FakeUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FakeUSDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FakeUSDC__factory extends ContractFactory {
  constructor(...args: FakeUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FakeUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FakeUSDC__factory {
    return super.connect(runner) as FakeUSDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FakeUSDCInterface {
    return new Interface(_abi) as FakeUSDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FakeUSDC {
    return new Contract(address, _abi, runner) as unknown as FakeUSDC;
  }
}
